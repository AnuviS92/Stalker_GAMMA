#include "common.h"

struct		 v2p
{
		half4			factor:	 COLOR0;		// for SM3 - factor.rgb - tonemap-prescaled
		half3			tc0:		TEXCOORD0;
		half3			tc1:		TEXCOORD1		;
};
struct		_out
{
		half4			low: 		COLOR0;
		half4			high:		COLOR1;
};


uniform samplerCUBE	 s_sky0	  : register(s0)	;
uniform samplerCUBE	 s_sky1	  : register(s1)	;

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel

_out		 main			   ( v2p I )
{
	half3		 	s0  	= texCUBE		(s_sky0,I.tc0);
	half3		 	s1	  = texCUBE		(s_sky1,I.tc1);

#ifdef USE_STRICT_GAMMA_CORRECTION
	s0 = SRGBToLinear(s0); 
	s1 = SRGBToLinear(s1); 
#endif

	float3			sky = lerp (s0,s1,I.factor.w);
	
#ifdef USE_STRICT_GAMMA_CORRECTION
	sky *= SRGBToLinear(I.factor.rgb); 
	sky = LinearTosRGB(sky);
#else
	sky *= I.factor.rgb; 
#endif

	// final tone-mapping
	_out			o;
	tonemap(o.low, o.high, sky, 1 )	; //factor contains tonemapping
	return			o;
}